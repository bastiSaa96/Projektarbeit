{"mappings":"AAAA,kBAAkB;AAClB,IAAI,UAAU;IAAC;IAAY;IAAY;IAAY;CAAW;AAC9D,IAAI,SAAS;IAAC;IAAK;IAAK;IAAK;CAAI;AAEjC,+BAA+B;AAC/B,IAAI,gBAAgB,uBAAuB;AAE3C,2BAA2B;AAC3B,IAAI,QAAQ,GAAG,MAAM,CAAC;AAEtB,0BAA0B;AAC1B,IAAI,OAAO,MAAM,SAAS,CAAC,QACV,IAAI,CAAC,eACL,KAAK,GACL,MAAM,CAAC,OACP,IAAI,CAAC,SAAS,OACd,KAAK,CAAC,SAAS,SAAS,CAAC,EAAE;IAAE,OAAO,IAAI,MAAM;AAAM;AAErE,4BAA4B;AAC5B,IAAI,SAAS,MAAM,SAAS,CAAC,UACV,IAAI,CAAC,SACL,KAAK,GACL,MAAM,CAAC,OACP,IAAI,CAAC,SAAS,SACd,IAAI,CAAC,SAAS,CAAC,EAAE;IAAE,OAAO;AAAG;AAEhD,gDAAgD;AAChD,SAAS,aAAa;IACpB,KAAK,KAAK,CAAC,SAAS,SAAS,CAAC,EAAE;QAAE,OAAO,IAAI,MAAM;IAAM;AAC3D;AAEA,2CAA2C;AAC3C,SAAS,uBAAuB,MAAM,EAAE;IACtC,IAAI,IAAI,OAAO,MAAM;IACrB,IAAI,gBAAgB,IAAI,MAAM;IAE9B,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAK;QAC1B,IAAI,YAAY;QAChB,IAAI,cAAc,UAAU,IAAE;QAC9B,IAAK,IAAI,IAAI,GAAG,IAAK,KAAM,IAAE,GAAK,IAAK;YACrC,IAAI,YAAY,EAAE;YAClB,IAAK,IAAI,IAAI,GAAG,IAAI,IAAE,GAAG,IACvB,IAAI,AAAC,CAAA,IAAK,KAAK,CAAC,MAAO,GACrB,UAAU,IAAI,CAAC;YAGnB,UAAU,IAAI,CAAC;YACf,UAAU,IAAI;YACd,IAAI,IAAI,UAAU,MAAM;YACxB,IAAI,eAAe,MAAM,CAAC,SAAS,CAAC,IAAE,EAAE,CAAC,GAAI,CAAA,IAAI,IAAI,MAAM,CAAC,SAAS,CAAC,IAAE,EAAE,CAAC,GAAG,CAAC,AAAD;YAC9E,aAAa,eAAe,SAAS,IAAE,GAAG,IAAE;QAC9C;QACA,aAAa,CAAC,EAAE,GAAG,YAAY;IACjC;IAEA,OAAO;AACT;AAEA,kDAAkD;AAClD,SAAS,UAAU,CAAC,EAAE;IACpB,IAAI,SAAS;IACb,IAAK,IAAI,IAAI,GAAG,KAAK,GAAG,IACtB,UAAU;IAEZ,OAAO;AACT","sources":["classifier/src/force-plot.js"],"sourcesContent":["// Define the data\nvar players = [\"Player A\", \"Player B\", \"Player C\", \"Player D\"];\nvar values = [0.2, 0.3, 0.4, 0.1];\n\n// Calculate the Shapley values\nvar shapleyValues = calculateShapleyValues(values);\n\n// Define the chart element\nvar chart = d3.select(\"#chart\");\n\n// Define the bar elements\nvar bars = chart.selectAll(\".bar\")\n                .data(shapleyValues)\n                .enter()\n                .append(\"div\")\n                .attr(\"class\", \"bar\")\n                .style(\"width\", function(d) { return d * 200 + \"px\"; });\n\n// Define the label elements\nvar labels = chart.selectAll(\".label\")\n                  .data(players)\n                  .enter()\n                  .append(\"div\")\n                  .attr(\"class\", \"label\")\n                  .text(function(d) { return d; });\n\n// Define the tick function to update bar widths\nfunction updateBars() {\n  bars.style(\"width\", function(d) { return d * 200 + \"px\"; });\n}\n\n// Function to calculate the Shapley values\nfunction calculateShapleyValues(values) {\n  var n = values.length;\n  var shapleyValues = new Array(n);\n  \n  for (var i = 0; i < n; i++) {\n    var numerator = 0;\n    var denominator = factorial(n-1);\n    for (var j = 0; j < (1 << (n-1)); j++) {\n      var coalition = [];\n      for (var k = 0; k < n-1; k++) {\n        if ((j & (1 << k)) !== 0) {\n          coalition.push(k);\n        }\n      }\n      coalition.push(i);\n      coalition.sort();\n      var m = coalition.length;\n      var contribution = values[coalition[m-1]] - (m > 1 ? values[coalition[m-2]] : 0);\n      numerator += contribution * binomial(n-1, m-1);\n    }\n    shapleyValues[i] = numerator / denominator;\n  }\n  \n  return shapleyValues;\n}\n\n// Function to calculate the factorial of a number\nfunction factorial(n) {\n  var result = 1;\n  for (var i = 2; i <= n; i++) {\n    result *= i;\n  }\n  return result;\n}"],"names":[],"version":3,"file":"index.124c1b4d.js.map","sourceRoot":"/__parcel_source_root/"}