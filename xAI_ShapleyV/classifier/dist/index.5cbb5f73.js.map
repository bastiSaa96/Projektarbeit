{"mappings":"AAAA,2GAA2G;AAC3G,IAAI,gBAAgB;IAAK;QAAE,MAAM;QAAS,OAAO;IAAI;IAAM;QAAE,MAAM;QAAW,OAAO;IAAI;IAAM;QAAE,MAAM;QAAS,OAAO;IAAI;IAAM;QAAE,MAAM;QAAS,OAAO;IAAI;CAAE;AAE/J,+BAA+B;AAC/B,IAAI,QAAQ,GAAG,eAAe,GACzB,KAAK,CAAC,eACN,KAAK,CAAC,UAAU,GAAG,aAAa,GAAG,QAAQ,CAAC,OAC5C,KAAK,CAAC,QAAQ,GAAG,SAAS,GAAG,KAAK,CAAC,EAAE,EAAE,QAAQ,CAAC,KAChD,KAAK,CAAC,UAAU,GAAG,WAAW,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,MAC1C,EAAE,CAAC,QAAQ;AAEhB,2BAA2B;AAC3B,IAAI,MAAM,GAAG,MAAM,CAAC,eACf,MAAM,CAAC,OACP,IAAI,CAAC,SAAS,KACd,IAAI,CAAC,UAAU;AAEpB,wCAAwC;AACxC,IAAI,QAAQ,EAAE;AAEd,IAAK,IAAI,IAAI,GAAG,IAAI,cAAc,MAAM,GAAG,GAAG,IAC1C,IAAK,IAAI,IAAI,IAAI,GAAG,IAAI,cAAc,MAAM,EAAE,IAC1C,MAAM,IAAI,CAAC;IAAE,QAAQ,aAAa,CAAC,EAAE;IAAE,QAAQ,aAAa,CAAC,EAAE;AAAC;AAIxE,MAAM,KAAK,CAAC,QAAQ,KAAK,CAAC;AAE1B,wDAAwD;AACxD,IAAI,QAAQ,IAAI,SAAS,CAAC,SACrB,IAAI,CAAC,eACL,KAAK,GACL,MAAM,CAAC,KACP,IAAI,CAAC,SAAS;AAEnB,MAAM,MAAM,CAAC,UACR,IAAI,CAAC,KAAK,IACV,KAAK,CAAC,QAAQ;AAEnB,MAAM,MAAM,CAAC,QACR,IAAI,CAAC,SAAS,CAAC,EAAE;IAAE,OAAO,EAAE,IAAI;AAAE;AAEvC,uDAAuD;AACvD,SAAS,SAAS;IACd,IAAI,SAAS,CAAC,SACT,IAAI,CAAC,MAAM,SAAS,CAAC,EAAE;QAAE,OAAO,EAAE,MAAM,CAAC,CAAC;IAAE,GAC5C,IAAI,CAAC,MAAM,SAAS,CAAC,EAAE;QAAE,OAAO,EAAE,MAAM,CAAC,CAAC;IAAE,GAC5C,IAAI,CAAC,MAAM,SAAS,CAAC,EAAE;QAAE,OAAO,EAAE,MAAM,CAAC,CAAC;IAAE,GAC5C,IAAI,CAAC,MAAM,SAAS,CAAC,EAAE;QAAE,OAAO,EAAE,MAAM,CAAC,CAAC;IAAE;IAEjD,IAAI,SAAS,CAAC,SACT,IAAI,CAAC,aAAa,SAAS,CAAC,EAAE;QAAE,OAAO,eAAe,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,GAAG;IAAK;AACtF","sources":["src/force.js"],"sourcesContent":["// Hier sind die hypothetischen Shapley-Werte für den Satz \"President Trump is an asshole and sucks balls.\"\nvar shapleyValues = [    { name: \"Trump\", value: 0.3 },    { name: \"asshole\", value: 0.6 },    { name: \"sucks\", value: 0.2 },    { name: \"balls\", value: 0.1 }];\n\n// Erstellt das D3 Force-Layout\nvar force = d3.forceSimulation()\n    .nodes(shapleyValues)\n    .force(\"charge\", d3.forceManyBody().strength(-100))\n    .force(\"link\", d3.forceLink().links([]).distance(50))\n    .force(\"center\", d3.forceCenter().x(200).y(200))\n    .on(\"tick\", ticked);\n\n// Erstellt das SVG-Element\nvar svg = d3.select(\"#force-plot\")\n    .append(\"svg\")\n    .attr(\"width\", 400)\n    .attr(\"height\", 400);\n\n// Erstellt die Links zwischen den Nodes\nvar links = [];\n\nfor (var i = 0; i < shapleyValues.length - 1; i++) {\n    for (var j = i + 1; j < shapleyValues.length; j++) {\n        links.push({ source: shapleyValues[i], target: shapleyValues[j] });\n    }\n}\n\nforce.force(\"link\").links(links);\n\n// Erstellt die Nodes und fügt sie zum SVG-Element hinzu\nvar nodes = svg.selectAll(\".node\")\n    .data(shapleyValues)\n    .enter()\n    .append(\"g\")\n    .attr(\"class\", \"node\");\n\nnodes.append(\"circle\")\n    .attr(\"r\", 20)\n    .style(\"fill\", \"lightblue\");\n\nnodes.append(\"text\")\n    .text(function(d) { return d.name; });\n\n// Definiert die Funktion \"ticked\" für das Force-Layout\nfunction ticked() {\n    svg.selectAll(\".link\")\n        .attr(\"x1\", function(d) { return d.source.x; })\n        .attr(\"y1\", function(d) { return d.source.y; })\n        .attr(\"x2\", function(d) { return d.target.x; })\n        .attr(\"y2\", function(d) { return d.target.y; });\n\n    svg.selectAll(\".node\")\n        .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n}\n\n"],"names":[],"version":3,"file":"index.5cbb5f73.js.map","sourceRoot":"/__parcel_source_root/"}